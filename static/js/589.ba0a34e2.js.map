{"version":3,"file":"static/js/589.ba0a34e2.js","mappings":"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","sources":["webpack://geocam-webclient/../src/shared/constants.ts","webpack://geocam-webclient/../src/shared/injectSymbols.ts","webpack://geocam-webclient/../src/shared/slideRegistry.ts","webpack://geocam-webclient/../src/utils/calculateAverage.ts","webpack://geocam-webclient/../src/utils/createCloneSlides.ts","webpack://geocam-webclient/../src/utils/disableChildrenTabbing.ts","webpack://geocam-webclient/../src/utils/except.ts","webpack://geocam-webclient/../src/utils/getDraggedSlidesCount.ts","webpack://geocam-webclient/../src/utils/getNumberInRange.ts","webpack://geocam-webclient/../src/utils/getScaleMultipliers.ts","webpack://geocam-webclient/../src/utils/getSnapAlignOffset.ts","webpack://geocam-webclient/../src/utils/i18nFormatter.ts","webpack://geocam-webclient/../src/utils/mapNumberToRange.ts","webpack://geocam-webclient/../src/utils/throttle.ts","webpack://geocam-webclient/../src/utils/toCssValue.ts","webpack://geocam-webclient/../src/components/ARIA/ARIA.ts","webpack://geocam-webclient/../src/composables/useDrag.ts","webpack://geocam-webclient/../src/composables/useHover.ts","webpack://geocam-webclient/../src/composables/useWheel.ts","webpack://geocam-webclient/../src/components/Carousel/carouselProps.ts","webpack://geocam-webclient/../src/components/Carousel/Carousel.ts","webpack://geocam-webclient/../src/components/Icon/Icon.types.ts","webpack://geocam-webclient/../src/components/Icon/Icon.ts","webpack://geocam-webclient/../src/components/Slide/Slide.ts","webpack://geocam-webclient/../src/components/Navigation/Navigation.ts","webpack://geocam-webclient/../src/components/Pagination/Pagination.ts","webpack://geocam-webclient/./src/views/ProductView.vue","webpack://geocam-webclient/./src/views/ProductView.vue?f743"],"sourcesContent":["import { CarouselConfig } from './types'\n\nexport const BREAKPOINT_MODE_OPTIONS = ['viewport', 'carousel'] as const\n\nexport const DIR_MAP = {\n  'bottom-to-top': 'btt',\n  'left-to-right': 'ltr',\n  'right-to-left': 'rtl',\n  'top-to-bottom': 'ttb',\n} as const\n\nexport const DIR_OPTIONS = [\n  'ltr',\n  'left-to-right',\n  'rtl',\n  'right-to-left',\n  'ttb',\n  'top-to-bottom',\n  'btt',\n  'bottom-to-top',\n] as const\n\nexport const I18N_DEFAULT_CONFIG = {\n  ariaGallery: 'Gallery',\n  ariaNavigateToPage: 'Navigate to page {slideNumber}',\n  ariaNavigateToSlide: 'Navigate to slide {slideNumber}',\n  ariaNextSlide: 'Navigate to next slide',\n  ariaPreviousSlide: 'Navigate to previous slide',\n  iconArrowDown: 'Arrow pointing downwards',\n  iconArrowLeft: 'Arrow pointing to the left',\n  iconArrowRight: 'Arrow pointing to the right',\n  iconArrowUp: 'Arrow pointing upwards',\n  itemXofY: 'Item {currentSlide} of {slidesCount}',\n} as const\n\nexport const NORMALIZED_DIR_OPTIONS = Object.values(DIR_MAP)\n\nexport const SLIDE_EFFECTS = ['slide', 'fade'] as const\n\nexport const SNAP_ALIGN_OPTIONS = [\n  'center',\n  'start',\n  'end',\n  'center-even',\n  'center-odd',\n] as const\n\nexport const DEFAULT_MOUSE_WHEEL_THRESHOLD = 10\nexport const DEFAULT_DRAG_THRESHOLD = 0.08\n\nexport const DEFAULT_CONFIG: CarouselConfig = {\n  autoplay: 0,\n  breakpointMode: BREAKPOINT_MODE_OPTIONS[0],\n  breakpoints: undefined,\n  dir: DIR_OPTIONS[0],\n  enabled: true,\n  gap: 0,\n  height: 'auto',\n  i18n: I18N_DEFAULT_CONFIG,\n  ignoreAnimations: false,\n  itemsToScroll: 1,\n  itemsToShow: 1,\n  modelValue: 0,\n  mouseDrag: true,\n  mouseWheel: false,\n  pauseAutoplayOnHover: false,\n  preventExcessiveDragging: false,\n  slideEffect: SLIDE_EFFECTS[0],\n  snapAlign: SNAP_ALIGN_OPTIONS[0],\n  touchDrag: true,\n  transition: 300,\n  wrapAround: false,\n}\n","import { InjectionKey } from 'vue'\n\nimport { InjectedCarousel } from '@/components/Carousel'\n\n// Use a symbol for inject provide to avoid any kind of collision with another lib\n// https://vuejs.org/guide/components/provide-inject#working-with-symbol-keys\nexport const injectCarousel = Symbol('carousel') as InjectionKey<\n  InjectedCarousel | undefined\n>\n","import { ComponentInternalInstance, EmitFn, shallowReactive } from 'vue'\n\nconst createSlideRegistry = (emit: EmitFn) => {\n  const slides = shallowReactive<Array<ComponentInternalInstance>>([])\n\n  const updateSlideIndexes = (startIndex?: number) => {\n    if (startIndex !== undefined) {\n      slides.slice(startIndex).forEach((slide, offset) => {\n        slide.exposed?.setIndex(startIndex + offset)\n      })\n    } else {\n      slides.forEach((slide, index) => {\n        slide.exposed?.setIndex(index)\n      })\n    }\n  }\n\n  return {\n    cleanup: () => {\n      slides.splice(0, slides.length)\n    },\n\n    getSlides: () => slides,\n\n    registerSlide: (slide: ComponentInternalInstance, index?: number) => {\n      if (!slide) return\n\n      if (slide.props.isClone) {\n        return\n      }\n\n      const slideIndex = index ?? slides.length\n      slides.splice(slideIndex, 0, slide)\n      updateSlideIndexes(slideIndex)\n      emit('slide-registered', { slide, index: slideIndex })\n    },\n\n    unregisterSlide: (slide: ComponentInternalInstance) => {\n      const slideIndex = slides.indexOf(slide)\n      if (slideIndex === -1) return\n\n      emit('slide-unregistered', { slide, index: slideIndex })\n\n      slides.splice(slideIndex, 1)\n      updateSlideIndexes(slideIndex)\n    },\n  }\n}\n\nexport type SlideRegistry = ReturnType<typeof createSlideRegistry>\n\nexport { createSlideRegistry }\n","export function calculateAverage(numbers: number[]) {\n  if (numbers.length === 0) return 0\n  const sum = numbers.reduce((acc, num) => acc + num, 0)\n  return sum / numbers.length\n}\n","import { cloneVNode, ComponentInternalInstance, VNode } from 'vue'\n\ntype CreateCloneSlidesArgs = {\n  slides: Array<ComponentInternalInstance>\n  position: 'before' | 'after'\n  toShow: number\n}\n\nexport function createCloneSlides({ slides, position, toShow }: CreateCloneSlidesArgs) {\n  const clones: VNode[] = []\n  const isBefore = position === 'before'\n  const start = isBefore ? -toShow : 0\n  const end = isBefore ? 0 : toShow\n\n  if (slides.length <= 0) {\n    return clones\n  }\n\n  for (let i = start; i < end; i++) {\n    const index = isBefore ? i : i + slides.length\n    const props = {\n      index,\n      isClone: true,\n      id: undefined, // Make sure we don't duplicate the id which would be invalid html\n      key: `clone-${position}-${i}`,\n    }\n    const vnode = slides[((i % slides.length) + slides.length) % slides.length].vnode\n    const clone = cloneVNode(vnode, props)\n    clone.el = null\n    clones.push(clone)\n  }\n\n  return clones\n}\n","import { VNode } from 'vue'\n\nconst FOCUSABLE_ELEMENTS_SELECTOR =\n  'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n\n/**\n * Disables keyboard tab navigation for all focusable child elements\n * @param node Vue virtual node containing the elements to disable\n */\nexport function disableChildrenTabbing(node: VNode) {\n  if (!node.el || !(node.el instanceof Element)) {\n    return\n  }\n\n  const elements = node.el.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)\n\n  for (const el of elements) {\n    if (\n      el instanceof HTMLElement &&\n      !el.hasAttribute('disabled') &&\n      el.getAttribute('aria-hidden') !== 'true'\n    ) {\n      el.setAttribute('tabindex', '-1')\n    }\n  }\n}\n","\n/** Useful function to destructure props without triggering reactivity for certain keys */\nexport function except<Obj extends object, Keys extends string>(obj: Obj, keys: Keys[]): Omit<Obj, Keys> {\n  return (Object.keys(obj).filter((k) => !(keys as string[]).includes(k)) as Array<Exclude<keyof Obj, Keys>>)\n    .reduce((acc, key) => (acc[key] = obj[key], acc), {} as Omit<Obj, Keys>)\n}","type DragParams = {\n  isVertical: boolean\n  isReversed: boolean\n  dragged: { x: number; y: number }\n  effectiveSlideSize: number\n  threshold: number\n}\n\n/**\n * Calculates the number of slides to move based on drag movement\n * @param params Configuration parameters for drag calculation\n * @returns Number of slides to move (positive or negative)\n */\nexport function getDraggedSlidesCount(params: DragParams): number {\n  const { isVertical, isReversed, dragged, effectiveSlideSize, threshold } = params\n\n  // Get drag value based on direction\n  const dragValue = isVertical ? dragged.y : dragged.x\n\n  // If no drag, return +0 explicitly\n  if (dragValue === 0) return 0\n\n  const dragRatio = dragValue / effectiveSlideSize\n  const absRatio = Math.abs(dragRatio)\n\n  // If below the threshold, consider it no movement\n  if (absRatio < threshold) return 0\n  \n  // For drags less than a full slide, move one slide in the drag direction\n  // For drags of a full slide or more, move the corresponding number of slides\n  const slidesDragged = absRatio < 1 ? Math.sign(dragRatio) : Math.round(dragRatio)\n\n  return isReversed ? slidesDragged : -slidesDragged\n}\n","type GetNumberInRangeArgs = {\n  val: number\n  max: number\n  min: number\n}\n\nexport function getNumberInRange({ val, max, min }: GetNumberInRangeArgs): number {\n  if (max < min) {\n    return val\n  }\n  return Math.min(Math.max(val, isNaN(min) ? val : min), isNaN(max) ? val : max)\n}\n","export function getTransformValues(el: HTMLElement) {\n  const { transform } = window.getComputedStyle(el)\n\n  //add sanity check\n  return transform\n    .split(/[(,)]/)\n    .slice(1, -1)\n    .map((v) => parseFloat(v))\n}\n\nexport type ScaleMultipliers = {\n  widthMultiplier: number\n  heightMultiplier: number\n}\nexport function getScaleMultipliers(\n  transformElements: Set<HTMLElement>\n): ScaleMultipliers {\n  let widthMultiplier = 1\n  let heightMultiplier = 1\n  transformElements.forEach((el) => {\n    const transformArr = getTransformValues(el)\n\n    if (transformArr.length === 6) {\n      widthMultiplier /= transformArr[0]\n      heightMultiplier /= transformArr[3]\n    }\n  })\n\n  return { widthMultiplier, heightMultiplier }\n}\n","import { SnapAlign } from '@/shared'\n\ntype SnapAlignOffsetParams = {\n  align: SnapAlign\n  slideSize?: number\n  viewportSize?: number\n  itemsToShow?: number\n}\n\n/**\n * Calculates the snap align offset for a carousel item based on items to show.\n * Returns the number of slides to offset.\n *\n * @param align - The alignment type.\n * @param itemsToShow - The number of items to show.\n * @returns The calculated offset.\n */\nfunction getSnapAlignOffsetByItemsToShow(align: SnapAlign, itemsToShow: number): number {\n  switch (align) {\n    case 'start':\n      return 0\n    case 'center':\n    case 'center-odd':\n      return (itemsToShow - 1) / 2\n    case 'center-even':\n      return (itemsToShow - 2) / 2\n    case 'end':\n      return itemsToShow - 1\n    default:\n      return 0\n  }\n}\n\n/**\n * Calculates the snap align offset for a carousel item based on slide and viewport size.\n * Returns the real width to offset.\n *\n * @param align - The alignment type.\n * @param slideSize - The size of the slide.\n * @param viewportSize - The size of the viewport.\n * @returns The calculated offset.\n */\nfunction getSnapAlignOffsetBySlideAndViewport(\n  align: SnapAlign,\n  slideSize: number,\n  viewportSize: number\n): number {\n  switch (align) {\n    case 'start':\n      return 0\n    case 'center':\n    case 'center-odd':\n      return (viewportSize - slideSize) / 2\n    case 'center-even':\n      return viewportSize / 2 - slideSize\n    case 'end':\n      return viewportSize - slideSize\n    default:\n      return 0\n  }\n}\n\n/**\n * Calculates the snap align offset for a carousel item.\n *\n * @param params - The parameters for calculating the offset.\n * @returns The calculated offset.\n */\nexport function getSnapAlignOffset({\n  slideSize,\n  viewportSize,\n  align,\n  itemsToShow,\n}: SnapAlignOffsetParams): number {\n  if (itemsToShow !== undefined) {\n    return getSnapAlignOffsetByItemsToShow(align, itemsToShow)\n  }\n  if (slideSize !== undefined && viewportSize !== undefined) {\n    return getSnapAlignOffsetBySlideAndViewport(align, slideSize, viewportSize)\n  }\n\n  return 0\n}\n","export function i18nFormatter(string = '', values = {}) {\n  return Object.entries(values).reduce(\n    (acc, [key, value]) => acc.replace(`{${key}}`, String(value)),\n    string\n  )\n}\n","type MapNumberToRangeArgs = {\n  val: number\n  max: number\n  min?: number\n}\n\nexport function mapNumberToRange({ val, max, min = 0 }: MapNumberToRangeArgs): number {\n  const mod = max - min + 1\n  return ((((val - min) % mod) + mod) % mod) + min\n}\n","/**\n * Returns a throttled version of the function using requestAnimationFrame.\n *\n * @param fn - The function to throttle.\n * @param ms - The number of milliseconds to wait for the throttled function to be called again\n */\nexport function throttle<Args extends Array<unknown>>(\n  fn: (...args: Args) => void,\n  ms = 0\n): { (...args: Args): void; cancel: () => void } {\n  let isThrottled = false\n  let start = 0\n  let frameId: number | null = null\n\n  function throttled(...args: Args) {\n    if (isThrottled) return\n\n    isThrottled = true\n    const step = () => {\n      frameId = requestAnimationFrame((time) => {\n        const elapsed = time - start\n        if (elapsed > ms) {\n          start = time\n          fn(...args)\n          isThrottled = false\n        } else {\n          step()\n        }\n      })\n    }\n    step()\n  }\n\n  throttled.cancel = () => {\n    if (frameId) {\n      cancelAnimationFrame(frameId)\n      frameId = null\n      isThrottled = false\n    }\n  }\n\n  return throttled\n}\n","/**\n * Converts a value to a CSS-compatible string.\n * @param value - The value to convert.\n * @returns The CSS-compatible string.\n **/\nexport function toCssValue(\n  value?: string | number,\n  unit: string = 'px'\n): string | undefined {\n  if (value === null || value === undefined || value === '') {\n    return undefined\n  }\n\n  if (typeof value === 'number' || parseFloat(value).toString() === value) {\n    return `${value}${unit}`\n  }\n  return value\n}\n","import { defineComponent, h, inject } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { i18nFormatter } from '@/utils'\n\nexport const ARIA = defineComponent({\n  name: 'CarouselAria',\n  setup() {\n    const carousel = inject(injectCarousel)\n\n    if (!carousel) {\n      return () => ''\n    }\n\n    return () =>\n      h(\n        'div',\n        {\n          class: ['carousel__liveregion', 'carousel__sr-only'],\n          'aria-live': 'polite',\n          'aria-atomic': 'true',\n        },\n        i18nFormatter(carousel.config.i18n['itemXofY'], {\n          currentSlide: carousel.currentSlide + 1,\n          slidesCount: carousel.slidesCount,\n        })\n      )\n  },\n})\n","import { ref, reactive, computed, Ref } from 'vue'\n\nimport { throttle } from '@/utils'\n\nexport type DragEventData = {\n  deltaX: number\n  deltaY: number\n  isTouch: boolean\n}\nexport interface UseDragOptions {\n  isSliding: boolean | Ref<boolean>\n  onDrag?: ({ deltaX, deltaY, isTouch }: DragEventData) => void\n  onDragStart?: () => void\n  onDragEnd?: () => void\n}\n\nexport function useDrag(options: UseDragOptions) {\n  let isTouch = false\n  const startPosition = { x: 0, y: 0 }\n  const dragged = reactive({ x: 0, y: 0 })\n  const isDragging = ref(false)\n\n  const { isSliding } = options\n\n  const sliding = computed(() => {\n    return typeof isSliding === 'boolean' ? isSliding : isSliding.value\n  })\n\n  const handleDragStart = (event: MouseEvent | TouchEvent): void => {\n    // Prevent drag initiation on input elements or if already sliding\n    const targetTagName = (event.target as HTMLElement).tagName\n    if (['INPUT', 'TEXTAREA', 'SELECT'].includes(targetTagName) || sliding.value) {\n      return\n    }\n\n    isTouch = event.type === 'touchstart'\n\n    if (isTouch && (event as TouchEvent).touches.length > 1) {\n      // If there is more than 1 finger on the screen, avoid drag start (this allows user to pinch zoom)\n      return\n    } else if (!isTouch) {\n      event.preventDefault()\n      if ((event as MouseEvent).button !== 0) {\n        return\n      }\n    }\n\n    startPosition.x = isTouch\n      ? (event as TouchEvent).touches[0].clientX\n      : (event as MouseEvent).clientX\n    startPosition.y = isTouch\n      ? (event as TouchEvent).touches[0].clientY\n      : (event as MouseEvent).clientY\n\n    const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n    const endEvent = isTouch ? 'touchend' : 'mouseup'\n    document.addEventListener(moveEvent, handleDrag, { passive: false })\n    document.addEventListener(endEvent, handleDragEnd, { passive: true })\n\n    options.onDragStart?.()\n  }\n\n  const handleDrag = throttle((event: TouchEvent | MouseEvent): void => {\n    if (isTouch && (event as TouchEvent).touches.length > 1) {\n      return\n    }\n\n    isDragging.value = true\n\n    const currentX = isTouch\n      ? (event as TouchEvent).touches[0].clientX\n      : (event as MouseEvent).clientX\n    const currentY = isTouch\n      ? (event as TouchEvent).touches[0].clientY\n      : (event as MouseEvent).clientY\n\n    dragged.x = currentX - startPosition.x\n    dragged.y = currentY - startPosition.y\n\n    options.onDrag?.({ deltaX: dragged.x, deltaY: dragged.y, isTouch })\n  })\n\n  const handleDragEnd = (): void => {\n    handleDrag.cancel()\n\n    const draggedDistance = Math.abs(dragged.x) + Math.abs(dragged.y);\n\n    if (!isTouch && draggedDistance > 10) {\n      window.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault()\n        e.stopPropagation()\n      }, { once: true, capture: true })\n    }\n\n    options.onDragEnd?.()\n\n    dragged.x = 0\n    dragged.y = 0\n    isDragging.value = false\n\n    const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n    const endEvent = isTouch ? 'touchend' : 'mouseup'\n    document.removeEventListener(moveEvent, handleDrag)\n    document.removeEventListener(endEvent, handleDragEnd)\n  }\n\n  return {\n    dragged,\n    isDragging,\n    handleDragStart,\n  }\n}\n","import { ref } from 'vue'\n\nexport function useHover() {\n  const isHover = ref(false)\n\n  const handleMouseEnter = (): void => {\n    isHover.value = true\n  }\n\n  const handleMouseLeave = (): void => {\n    isHover.value = false\n  }\n\n  return {\n    isHover,\n    handleMouseEnter,\n    handleMouseLeave,\n  }\n}\n","import { ComputedRef, Ref, computed } from 'vue'\n\nimport { CarouselConfig } from '@/shared'\nimport { DEFAULT_MOUSE_WHEEL_THRESHOLD } from '@/shared/constants'\n\nexport type WheelEventData = {\n  deltaX: number\n  deltaY: number\n  isScrollingForward: boolean\n}\n\nexport type UseWheelOptions = {\n  isVertical: boolean | ComputedRef<boolean>\n  isSliding: boolean | Ref<boolean>\n  config: CarouselConfig\n  onWheel?: (data: WheelEventData) => void\n}\n\nexport function useWheel(options: UseWheelOptions) {\n  const { isVertical, isSliding, config } = options\n\n  // Create computed values to handle both reactive and non-reactive inputs\n  const vertical = computed(() => {\n    return typeof isVertical === 'boolean' ? isVertical : isVertical.value\n  })\n\n  const sliding = computed(() => {\n    return typeof isSliding === 'boolean' ? isSliding : isSliding.value\n  })\n\n  const handleScroll = (event: WheelEvent): void => {\n    event.preventDefault()\n\n    if (!config.mouseWheel || sliding.value) {\n      return\n    }\n\n    // Add sensitivity threshold to prevent small movements from triggering navigation\n    const threshold =\n      typeof config.mouseWheel === 'object'\n        ? (config.mouseWheel.threshold ?? DEFAULT_MOUSE_WHEEL_THRESHOLD)\n        : DEFAULT_MOUSE_WHEEL_THRESHOLD\n\n    // Determine scroll direction\n    const deltaY = Math.abs(event.deltaY) > threshold ? event.deltaY : 0\n    const deltaX = Math.abs(event.deltaX) > threshold ? event.deltaX : 0\n\n    // If neither delta exceeds the threshold, don't navigate\n    if (deltaY === 0 && deltaX === 0) {\n      return\n    }\n\n    // Determine primary delta based on carousel orientation\n    const primaryDelta = vertical.value ? deltaY : deltaX\n\n    // If primaryDelta is 0, use the other delta as fallback\n    const effectiveDelta =\n      primaryDelta !== 0 ? primaryDelta : vertical.value ? deltaX : deltaY\n\n    // Positive delta means scrolling down/right\n    const isScrollingForward = effectiveDelta > 0\n\n    options.onWheel?.({ deltaX, deltaY, isScrollingForward })\n  }\n\n  return {\n    handleScroll,\n  }\n}\n","import { PropType } from 'vue'\n\nimport {\n  BREAKPOINT_MODE_OPTIONS,\n  DEFAULT_CONFIG,\n  DIR_MAP,\n  DIR_OPTIONS,\n  SLIDE_EFFECTS,\n  SNAP_ALIGN_OPTIONS,\n} from '@/shared'\n\nimport type {\n  BreakpointMode,\n  CarouselConfig,\n  Dir,\n  DragConfig,\n  NonNormalizedDir,\n  NormalizedDir,\n  SlideEffect,\n  SnapAlign,\n  WheelConfig,\n} from '@/shared'\n\nexport const carouselProps = {\n  // time to auto advance slides in ms\n  autoplay: {\n    default: DEFAULT_CONFIG.autoplay,\n    type: Number,\n  },\n  // an object to store breakpoints\n  breakpoints: {\n    default: DEFAULT_CONFIG.breakpoints,\n    type: Object as PropType<CarouselConfig['breakpoints']>,\n  },\n  // controls the breakpoint mode relative to the carousel container or the viewport\n  breakpointMode: {\n    default: DEFAULT_CONFIG.breakpointMode,\n    validator(value: BreakpointMode) {\n      return BREAKPOINT_MODE_OPTIONS.includes(value)\n    },\n  },\n  clamp: {\n    type: Boolean,\n  },\n  // control the direction of the carousel\n  dir: {\n    type: String as PropType<Dir>,\n    default: DEFAULT_CONFIG.dir,\n    validator(value: Dir, props: { height?: string }) {\n      // The value must match one of these strings\n      if (!DIR_OPTIONS.includes(value)) {\n        return false\n      }\n\n      const normalizedDir =\n        value in DIR_MAP ? DIR_MAP[value as NonNormalizedDir] : (value as NormalizedDir)\n      if (\n        ['ttb', 'btt'].includes(normalizedDir) &&\n        (!props.height || props.height === 'auto')\n      ) {\n        console.warn(\n          `[vue3-carousel]: The dir \"${value}\" is not supported with height \"auto\".`\n        )\n      }\n      return true\n    },\n  },\n  // enable/disable the carousel component\n  enabled: {\n    default: DEFAULT_CONFIG.enabled,\n    type: Boolean,\n  },\n  // control the gap between slides\n  gap: {\n    default: DEFAULT_CONFIG.gap,\n    type: Number,\n  },\n  // set carousel height\n  height: {\n    default: DEFAULT_CONFIG.height,\n    type: [Number, String],\n  },\n  // aria-labels and additional text labels\n  i18n: {\n    default: DEFAULT_CONFIG.i18n,\n    type: Object as PropType<typeof DEFAULT_CONFIG.i18n>,\n  },\n  ignoreAnimations: {\n    default: false,\n    type: [Array, Boolean, String] as PropType<CarouselConfig['ignoreAnimations']>,\n  },\n  // count of items to be scrolled\n  itemsToScroll: {\n    default: DEFAULT_CONFIG.itemsToScroll,\n    type: Number,\n  },\n  // count of items to showed per view\n  itemsToShow: {\n    default: DEFAULT_CONFIG.itemsToShow,\n    type: [Number, String],\n  },\n  // slide number number of initial slide\n  modelValue: {\n    default: undefined,\n    type: Number,\n  },\n  // toggle mouse dragging\n  mouseDrag: {\n    default: DEFAULT_CONFIG.mouseDrag,\n    type: [Boolean, Object] as PropType<boolean | DragConfig>,\n  },\n  // toggle mouse wheel scrolling\n  mouseWheel: {\n    default: DEFAULT_CONFIG.mouseWheel,\n    type: [Boolean, Object] as PropType<boolean | WheelConfig>,\n  },\n  // control mouse scroll threshold\n  mouseScrollThreshold: {\n    default: DEFAULT_CONFIG.mouseScrollThreshold,\n    type: Number,\n  },\n  pauseAutoplayOnHover: {\n    default: DEFAULT_CONFIG.pauseAutoplayOnHover,\n    type: Boolean,\n  },\n  preventExcessiveDragging: {\n    default: false,\n    type: Boolean,\n    validator(value: boolean, props: { wrapAround?: boolean }) {\n      if (value && props.wrapAround) {\n        console.warn(\n          `[vue3-carousel]: \"preventExcessiveDragging\" cannot be used with wrapAround. The setting will be ignored.`\n        )\n      }\n      return true\n    },\n  },\n  slideEffect: {\n    type: String as PropType<SlideEffect>,\n    default: DEFAULT_CONFIG.slideEffect,\n    validator(value: SlideEffect) {\n      return SLIDE_EFFECTS.includes(value)\n    },\n  },\n  // control snap position alignment\n  snapAlign: {\n    default: DEFAULT_CONFIG.snapAlign,\n    validator(value: SnapAlign) {\n      return SNAP_ALIGN_OPTIONS.includes(value)\n    },\n  },\n  // toggle touch dragging\n  touchDrag: {\n    default: DEFAULT_CONFIG.touchDrag,\n    type: [Boolean, Object] as PropType<boolean | DragConfig>,\n  },\n  // sliding transition time in ms\n  transition: {\n    default: DEFAULT_CONFIG.transition,\n    type: Number,\n  },\n  // control infinite scrolling mode\n  wrapAround: {\n    default: DEFAULT_CONFIG.wrapAround,\n    type: Boolean,\n  },\n}\n","import {\n  ComputedRef,\n  Ref,\n  SetupContext,\n  computed,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  shallowReactive,\n  toRefs,\n  watch,\n  watchEffect,\n} from 'vue'\n\nimport { ARIA as ARIAComponent } from '@/components/ARIA'\nimport { DragEventData, useDrag, useHover, useWheel, WheelEventData } from '@/composables'\nimport {\n  CarouselConfig,\n  DEFAULT_CONFIG,\n  DEFAULT_DRAG_THRESHOLD,\n  DIR_MAP,\n  NonNormalizedDir,\n  NormalizedDir,\n  createSlideRegistry,\n  injectCarousel,\n} from '@/shared'\nimport {\n  ScaleMultipliers,\n  calculateAverage,\n  createCloneSlides,\n  except,\n  getDraggedSlidesCount,\n  getNumberInRange,\n  getScaleMultipliers,\n  getSnapAlignOffset,\n  mapNumberToRange,\n  throttle,\n  toCssValue,\n} from '@/utils'\n\nimport {\n  CarouselData,\n  CarouselExposed,\n  CarouselNav,\n  ElRect,\n  InjectedCarousel,\n} from './Carousel.types'\nimport { carouselProps } from './carouselProps'\n\nexport const Carousel = defineComponent({\n  name: 'VueCarousel',\n  props: carouselProps,\n  emits: [\n    'before-init',\n    'drag',\n    'init',\n    'loop',\n    'slide-end',\n    'slide-registered',\n    'slide-start',\n    'slide-unregistered',\n    'update:modelValue',\n    'wheel',\n  ],\n  setup(props: CarouselConfig, { slots, emit, expose }: SetupContext) {\n    const slideRegistry = createSlideRegistry(emit)\n    const slides = slideRegistry.getSlides()\n    const slidesCount = computed(() => slides.length)\n\n    const root: Ref<Element | null> = ref(null)\n    const viewport: Ref<Element | null> = ref(null)\n    const slideSize: Ref<number> = ref(0)\n\n    const fallbackConfig = computed(() => ({\n      ...DEFAULT_CONFIG,\n      // Avoid reactivity tracking in breakpoints and vModel which would trigger unnecessary updates\n      ...except(props, ['breakpoints', 'modelValue']),\n      i18n: { ...DEFAULT_CONFIG.i18n, ...props.i18n },\n    }))\n\n    // current active config\n    const config = shallowReactive<CarouselConfig>({ ...fallbackConfig.value })\n\n    // slides\n    const currentSlideIndex = ref(props.modelValue ?? 0)\n    const activeSlideIndex = ref(currentSlideIndex.value)\n\n    watch(currentSlideIndex, (val) => (activeSlideIndex.value = val))\n    const prevSlideIndex = ref(0)\n    const middleSlideIndex = computed(() => Math.ceil((slidesCount.value - 1) / 2))\n    const maxSlideIndex = computed(() => slidesCount.value - 1)\n    const minSlideIndex = computed(() => 0)\n\n    let autoplayTimer: ReturnType<typeof setInterval> | null = null\n    let transitionTimer: ReturnType<typeof setTimeout> | null = null\n    let resizeObserver: ResizeObserver | null = null\n\n    const effectiveSlideSize = computed(() => slideSize.value + config.gap)\n\n    const normalizedDir = computed<NormalizedDir>(() => {\n      const dir = config.dir || 'ltr'\n      return dir in DIR_MAP ? DIR_MAP[dir as NonNormalizedDir] : (dir as NormalizedDir)\n    })\n\n    const isReversed = computed(() => ['rtl', 'btt'].includes(normalizedDir.value))\n    const isVertical = computed(() => ['ttb', 'btt'].includes(normalizedDir.value))\n    const isAuto = computed(() => config.itemsToShow === 'auto')\n\n    const dimension = computed(() => (isVertical.value ? 'height' : 'width'))\n\n    function updateBreakpointsConfig(): void {\n      if (!mounted.value) {\n        return\n      }\n      // Determine the width source based on the 'breakpointMode' config\n      const widthSource =\n        (fallbackConfig.value.breakpointMode === 'carousel'\n          ? root.value?.getBoundingClientRect().width\n          : typeof window !== 'undefined'\n            ? window.innerWidth\n            : 0) || 0\n\n      const breakpointsArray = Object.keys(props.breakpoints || {})\n        .map((key) => Number(key))\n        .sort((a, b) => +b - +a)\n\n      const newConfig: Partial<CarouselConfig> = {}\n      breakpointsArray.some((breakpoint) => {\n        if (widthSource >= breakpoint) {\n          Object.assign(newConfig, props.breakpoints![breakpoint])\n          if (newConfig.i18n) {\n            Object.assign(\n              newConfig.i18n,\n              fallbackConfig.value.i18n,\n              props.breakpoints![breakpoint].i18n\n            )\n          }\n          return true\n        }\n        return false\n      })\n\n      Object.assign(config, fallbackConfig.value, newConfig)\n\n      // Validate itemsToShow\n      if (!isAuto.value) {\n        config.itemsToShow = getNumberInRange({\n          val: Number(config.itemsToShow),\n          max: props.clamp ? slidesCount.value : Infinity,\n          min: 1,\n        })\n      }\n    }\n\n    const handleResize = throttle(() => {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n    })\n\n    const transformElements = shallowReactive<Set<HTMLElement>>(new Set())\n\n    /**\n     * Setup functions\n     */\n    const slidesRect = ref<Array<ElRect>>([])\n    function updateSlidesRectSize({\n      widthMultiplier,\n      heightMultiplier,\n    }: ScaleMultipliers): void {\n      slidesRect.value = slides.map((slide) => {\n        const rect = slide.exposed?.getBoundingRect()\n        return {\n          width: rect.width * widthMultiplier,\n          height: rect.height * heightMultiplier,\n        }\n      })\n    }\n    const viewportRect: Ref<ElRect> = ref({\n      width: 0,\n      height: 0,\n    })\n    function updateViewportRectSize({\n      widthMultiplier,\n      heightMultiplier,\n    }: ScaleMultipliers): void {\n      const rect = viewport.value?.getBoundingClientRect() || { width: 0, height: 0 }\n      viewportRect.value = {\n        width: rect.width * widthMultiplier,\n        height: rect.height * heightMultiplier,\n      }\n    }\n\n    function updateSlideSize(): void {\n      if (!viewport.value) return\n\n      const scaleMultipliers = getScaleMultipliers(transformElements)\n\n      updateViewportRectSize(scaleMultipliers)\n      updateSlidesRectSize(scaleMultipliers)\n\n      if (isAuto.value) {\n        slideSize.value = calculateAverage(\n          slidesRect.value.map((slide) => slide[dimension.value])\n        )\n      } else {\n        const itemsToShow = Number(config.itemsToShow)\n        const totalGap = (itemsToShow - 1) * config.gap\n        slideSize.value = (viewportRect.value[dimension.value] - totalGap) / itemsToShow\n      }\n    }\n\n    function updateSlidesData(): void {\n      if (!config.wrapAround && slidesCount.value > 0) {\n        currentSlideIndex.value = getNumberInRange({\n          val: currentSlideIndex.value,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      }\n    }\n\n    const ignoreAnimations = computed<false | string[]>(() => {\n      if (typeof props.ignoreAnimations === 'string') {\n        return props.ignoreAnimations.split(',')\n      } else if (Array.isArray(props.ignoreAnimations)) {\n        return props.ignoreAnimations\n      } else if (!props.ignoreAnimations) {\n        return []\n      }\n      return false\n    })\n\n    watchEffect(() => updateSlidesData())\n\n    watchEffect(() => {\n      // Call updateSlideSize when viewport is ready and track deps\n      updateSlideSize()\n    })\n\n    let animationInterval: number\n\n    const setAnimationInterval = (event: AnimationEvent) => {\n      const target = event.target as HTMLElement\n      if (\n        !target?.contains(root.value) ||\n        (Array.isArray(ignoreAnimations.value) &&\n          ignoreAnimations.value.includes(event.animationName))\n      ) {\n        return\n      }\n\n      transformElements.add(target)\n      if (!animationInterval) {\n        const stepAnimation = () => {\n          animationInterval = requestAnimationFrame(() => {\n            updateSlideSize()\n            stepAnimation()\n          })\n        }\n        stepAnimation()\n      }\n    }\n    const finishAnimation = (event: AnimationEvent | TransitionEvent) => {\n      const target = event.target as HTMLElement\n      if (target) {\n        transformElements.delete(target)\n      }\n      if (animationInterval && transformElements.size === 0) {\n        cancelAnimationFrame(animationInterval)\n        updateSlideSize()\n      }\n    }\n\n    const mounted = ref(false)\n\n    if (typeof document !== 'undefined') {\n      watchEffect(() => {\n        if (mounted.value && ignoreAnimations.value !== false) {\n          document.addEventListener('animationstart', setAnimationInterval)\n          document.addEventListener('animationend', finishAnimation)\n        } else {\n          document.removeEventListener('animationstart', setAnimationInterval)\n          document.removeEventListener('animationend', finishAnimation)\n        }\n      })\n    }\n\n    onMounted((): void => {\n      mounted.value = true\n      updateBreakpointsConfig()\n      initAutoplay()\n\n      if (root.value) {\n        resizeObserver = new ResizeObserver(handleResize)\n        resizeObserver.observe(root.value)\n      }\n\n      emit('init')\n    })\n\n    onBeforeUnmount(() => {\n      mounted.value = false\n\n      slideRegistry.cleanup()\n\n      if (transitionTimer) {\n        clearTimeout(transitionTimer)\n      }\n      if (animationInterval) {\n        cancelAnimationFrame(animationInterval)\n      }\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n      }\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n        resizeObserver = null\n      }\n\n      if (typeof document !== 'undefined') {\n        handleBlur()\n      }\n      if (root.value) {\n        root.value.removeEventListener('transitionend', updateSlideSize)\n        root.value.removeEventListener('animationiteration', updateSlideSize)\n      }\n    })\n\n    /**\n     * Carousel Event listeners\n     */\n    const { isHover, handleMouseEnter, handleMouseLeave } = useHover()\n\n    const handleArrowKeys = throttle((event: KeyboardEvent): void => {\n      if (event.ctrlKey) return\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          if (isVertical.value === event.key.endsWith('Up')) {\n            if (isReversed.value) {\n              next(true)\n            } else {\n              prev(true)\n            }\n          }\n          break\n        case 'ArrowRight':\n        case 'ArrowDown':\n          if (isVertical.value === event.key.endsWith('Down')) {\n            if (isReversed.value) {\n              prev(true)\n            } else {\n              next(true)\n            }\n          }\n          break\n      }\n    }, 200)\n\n    const handleBlur = (): void => {\n      document.removeEventListener('keydown', handleArrowKeys)\n    }\n\n    const handleFocus = (): void => {\n      document.addEventListener('keydown', handleArrowKeys)\n    }\n\n    /**\n     * Autoplay\n     */\n    function initAutoplay(): void {\n      if (!config.autoplay || config.autoplay <= 0) {\n        return\n      }\n\n      autoplayTimer = setInterval(() => {\n        if (config.pauseAutoplayOnHover && isHover.value) {\n          return\n        }\n\n        next()\n      }, config.autoplay)\n    }\n\n    function resetAutoplay(): void {\n      stopAutoplay()\n      initAutoplay()\n    }\n\n    function stopAutoplay(): void {\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n        autoplayTimer = null\n      }\n    }\n\n    /**\n     * Navigation function\n     */\n    const isSliding = ref(false)\n\n    const onDrag = ({ deltaX, deltaY, isTouch }: DragEventData) => {\n      emit('drag', { deltaX, deltaY })\n\n      const threshold = isTouch\n        ? typeof config.touchDrag === 'object'\n          ? (config.touchDrag?.threshold ?? DEFAULT_DRAG_THRESHOLD)\n          : DEFAULT_DRAG_THRESHOLD\n        : typeof config.mouseDrag === 'object'\n          ? (config.mouseDrag?.threshold ?? DEFAULT_DRAG_THRESHOLD)\n          : DEFAULT_DRAG_THRESHOLD\n\n      const draggedSlides = getDraggedSlidesCount({\n        isVertical: isVertical.value,\n        isReversed: isReversed.value,\n        dragged: { x: deltaX, y: deltaY },\n        effectiveSlideSize: effectiveSlideSize.value,\n        threshold,\n      })\n\n      // Prevent unnecessary reactivity\n      if (draggedSlides === 0) {\n        return\n      }\n\n      activeSlideIndex.value = config.wrapAround\n        ? currentSlideIndex.value + draggedSlides\n        : getNumberInRange({\n            val: currentSlideIndex.value + draggedSlides,\n            max: maxSlideIndex.value,\n            min: minSlideIndex.value,\n          })\n    }\n\n    const onDragEnd = () => slideTo(activeSlideIndex.value)\n\n    const { dragged, isDragging, handleDragStart } = useDrag({\n      isSliding,\n      onDrag,\n      onDragEnd,\n    })\n\n    const onWheel = ({ deltaX, deltaY, isScrollingForward }: WheelEventData) => {\n      emit('wheel', { deltaX, deltaY })\n\n      if (isScrollingForward) {\n        // Scrolling down/right\n        if (isReversed.value) {\n          prev()\n        } else {\n          next()\n        }\n      } else {\n        // Scrolling up/left\n        if (isReversed.value) {\n          next()\n        } else {\n          prev()\n        }\n      }\n    }\n\n    const { handleScroll } = useWheel({\n      isVertical,\n      isSliding,\n      config,\n      onWheel,\n    })\n\n    function next(skipTransition = false): void {\n      slideTo(currentSlideIndex.value + config.itemsToScroll, skipTransition)\n    }\n\n    function prev(skipTransition = false): void {\n      slideTo(currentSlideIndex.value - config.itemsToScroll, skipTransition)\n    }\n\n    function slideTo(slideIndex: number, skipTransition = false): void {\n      if (!skipTransition && isSliding.value) {\n        return\n      }\n      \n      const targetIndex = (config.wrapAround ? mapNumberToRange : getNumberInRange)({\n        val: slideIndex,\n        max: maxSlideIndex.value,\n        min: minSlideIndex.value,\n      })\n      \n      if (currentSlideIndex.value === targetIndex) {\n        return;\n      }\n      \n      prevSlideIndex.value = currentSlideIndex.value\n\n      emit('slide-start', {\n        slidingToIndex: slideIndex,\n        currentSlideIndex: currentSlideIndex.value,\n        prevSlideIndex: prevSlideIndex.value,\n        slidesCount: slidesCount.value,\n      })\n\n      stopAutoplay()\n      isSliding.value = true\n\n      currentSlideIndex.value = slideIndex\n      if (targetIndex !== slideIndex) {\n        modelWatcher.pause()\n      }\n      emit('update:modelValue', targetIndex)\n\n      const transitionCallback = (): void => {\n        if (config.wrapAround && targetIndex !== slideIndex) {\n          modelWatcher.resume()\n\n          currentSlideIndex.value = targetIndex\n          emit('loop', {\n            currentSlideIndex: currentSlideIndex.value,\n            slidingToIndex: slideIndex,\n          })\n        }\n\n        emit('slide-end', {\n          currentSlideIndex: currentSlideIndex.value,\n          prevSlideIndex: prevSlideIndex.value,\n          slidesCount: slidesCount.value,\n        })\n\n        isSliding.value = false\n        resetAutoplay()\n      }\n\n      transitionTimer = setTimeout(transitionCallback, config.transition)\n    }\n\n    function restartCarousel(): void {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n      resetAutoplay()\n    }\n\n    // Update the carousel on props change\n    watch(\n      () => [fallbackConfig.value, props.breakpoints],\n      () => updateBreakpointsConfig(),\n      { deep: true }\n    )\n\n    watch(\n      () => props.autoplay,\n      () => resetAutoplay()\n    )\n\n    // Handle changing v-model value\n    const modelWatcher = watch(\n      () => props.modelValue,\n      (val) => {\n        if (val === currentSlideIndex.value) {\n          return\n        }\n        slideTo(Number(val), true)\n      }\n    )\n\n    // Init carousel\n    emit('before-init')\n\n    const clonedSlidesCount = computed(() => {\n      if (!config.wrapAround) {\n        return { before: 0, after: 0 }\n      }\n      if (isAuto.value) {\n        return { before: slides.length, after: slides.length }\n      }\n\n      const itemsToShow = Number(config.itemsToShow)\n      const slidesToClone = Math.ceil(itemsToShow + (config.itemsToScroll - 1))\n      const before = slidesToClone - activeSlideIndex.value\n      const after = slidesToClone - (slidesCount.value - (activeSlideIndex.value + 1))\n\n      return {\n        before: Math.max(0, before),\n        after: Math.max(0, after),\n      }\n    })\n\n    const clonedSlidesOffset = computed(() => {\n      if (!clonedSlidesCount.value.before) {\n        return 0\n      }\n      if (isAuto.value) {\n        return (\n          slidesRect.value\n            .slice(-1 * clonedSlidesCount.value.before)\n            .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) * -1\n        )\n      }\n\n      return clonedSlidesCount.value.before * effectiveSlideSize.value * -1\n    })\n\n    const snapAlignOffset = computed(() => {\n      if (isAuto.value) {\n        const slideIndex =\n          ((currentSlideIndex.value % slides.length) + slides.length) % slides.length\n        return getSnapAlignOffset({\n          slideSize: slidesRect.value[slideIndex]?.[dimension.value],\n          viewportSize: viewportRect.value[dimension.value],\n          align: config.snapAlign,\n        })\n      }\n\n      return getSnapAlignOffset({\n        align: config.snapAlign,\n        itemsToShow: +config.itemsToShow,\n      })\n    })\n    const scrolledOffset = computed(() => {\n      let output = 0\n\n      if (isAuto.value) {\n        if (currentSlideIndex.value < 0) {\n          output =\n            slidesRect.value\n              .slice(currentSlideIndex.value)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) * -1\n        } else {\n          output = slidesRect.value\n            .slice(0, currentSlideIndex.value)\n            .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0)\n        }\n        output -= snapAlignOffset.value\n\n        // remove whitespace\n        if (!config.wrapAround) {\n          const maxSlidingValue =\n            slidesRect.value.reduce(\n              (acc, slide) => acc + slide[dimension.value] + config.gap,\n              0\n            ) -\n            viewportRect.value[dimension.value] -\n            config.gap\n\n          output = getNumberInRange({\n            val: output,\n            max: maxSlidingValue,\n            min: 0,\n          })\n        }\n      } else {\n        let scrolledSlides = currentSlideIndex.value - snapAlignOffset.value\n\n        // remove whitespace\n        if (!config.wrapAround) {\n          scrolledSlides = getNumberInRange({\n            val: scrolledSlides,\n            max: slidesCount.value - +config.itemsToShow,\n            min: 0,\n          })\n        }\n        output = scrolledSlides * effectiveSlideSize.value\n      }\n\n      return output * (isReversed.value ? 1 : -1)\n    })\n\n    const visibleRange = computed(() => {\n      if (!isAuto.value) {\n        const base = currentSlideIndex.value - snapAlignOffset.value\n        if (config.wrapAround) {\n          return {\n            min: Math.floor(base),\n            max: Math.ceil(base + Number(config.itemsToShow) - 1),\n          }\n        }\n        return {\n          min: Math.floor(\n            getNumberInRange({\n              val: base,\n              max: slidesCount.value - Number(config.itemsToShow),\n              min: 0,\n            })\n          ),\n          max: Math.ceil(\n            getNumberInRange({\n              val: base + Number(config.itemsToShow) - 1,\n              max: slidesCount.value - 1,\n              min: 0,\n            })\n          ),\n        }\n      }\n\n      // Auto width mode\n      let minIndex = 0\n      {\n        let accumulatedSize = 0\n        let index = 0 - clonedSlidesCount.value.before\n        const offset = Math.abs(scrolledOffset.value + clonedSlidesOffset.value)\n\n        while (accumulatedSize <= offset) {\n          const normalizedIndex =\n            ((index % slides.length) + slides.length) % slides.length\n          accumulatedSize +=\n            slidesRect.value[normalizedIndex]?.[dimension.value] + config.gap\n          index++\n        }\n        minIndex = index - 1\n      }\n\n      let maxIndex = 0\n      {\n        let index = minIndex\n        let accumulatedSize = 0\n        if (index < 0) {\n          accumulatedSize =\n            slidesRect.value\n              .slice(0, index)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) -\n            Math.abs(scrolledOffset.value + clonedSlidesOffset.value)\n        } else {\n          accumulatedSize =\n            slidesRect.value\n              .slice(0, index)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) -\n            Math.abs(scrolledOffset.value)\n        }\n\n        while (accumulatedSize < viewportRect.value[dimension.value]) {\n          const normalizedIndex =\n            ((index % slides.length) + slides.length) % slides.length\n          accumulatedSize +=\n            slidesRect.value[normalizedIndex]?.[dimension.value] + config.gap\n          index++\n        }\n        maxIndex = index - 1\n      }\n\n      return {\n        min: Math.floor(minIndex),\n        max: Math.ceil(maxIndex),\n      }\n    })\n\n    const trackTransform: ComputedRef<string | undefined> = computed(() => {\n      if (config.slideEffect === 'fade') {\n        return undefined\n      }\n\n      const translateAxis = isVertical.value ? 'Y' : 'X'\n\n      // Include user drag interaction offset\n      const dragOffset = isVertical.value ? dragged.y : dragged.x\n\n      let totalOffset = scrolledOffset.value + dragOffset\n\n      if (!config.wrapAround && config.preventExcessiveDragging) {\n        let maxSlidingValue = 0\n        if (isAuto.value) {\n          maxSlidingValue = slidesRect.value.reduce(\n            (acc, slide) => acc + slide[dimension.value],\n            0\n          )\n        } else {\n          maxSlidingValue =\n            (slidesCount.value - Number(config.itemsToShow)) * effectiveSlideSize.value\n        }\n        const min = isReversed.value ? 0 : -1 * maxSlidingValue\n        const max = isReversed.value ? maxSlidingValue : 0\n        totalOffset = getNumberInRange({\n          val: totalOffset,\n          min,\n          max,\n        })\n      }\n      return `translate${translateAxis}(${totalOffset}px)`\n    })\n\n    const carouselStyle = computed(() => ({\n      '--vc-carousel-height': toCssValue(config.height),\n      '--vc-cloned-offset': toCssValue(clonedSlidesOffset.value),\n      '--vc-slide-gap': toCssValue(config.gap),\n      '--vc-transition-duration': isSliding.value\n        ? toCssValue(config.transition, 'ms')\n        : undefined,\n    }))\n\n    const nav: CarouselNav = { slideTo, next, prev }\n\n    const provided: InjectedCarousel = reactive({\n      activeSlide: activeSlideIndex,\n      config,\n      currentSlide: currentSlideIndex,\n      isSliding,\n      isVertical,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      nav,\n      normalizedDir,\n      slideRegistry,\n      slideSize,\n      slides,\n      slidesCount,\n      viewport,\n      visibleRange,\n    })\n\n    provide(injectCarousel, provided)\n\n    const data = reactive<CarouselData>({\n      config,\n      currentSlide: currentSlideIndex,\n      maxSlide: maxSlideIndex,\n      middleSlide: middleSlideIndex,\n      minSlide: minSlideIndex,\n      slideSize,\n      slidesCount,\n    })\n\n    expose<CarouselExposed>(\n      reactive({\n        data,\n        next,\n        prev,\n        restartCarousel,\n        slideTo,\n        updateBreakpointsConfig,\n        updateSlideSize,\n        updateSlidesData,\n        ...toRefs(provided),\n      })\n    )\n\n    return () => {\n      const slotSlides = slots.default || slots.slides\n      const outputSlides = slotSlides?.(data) || []\n\n      const { before, after } = clonedSlidesCount.value\n      const slidesBefore = createCloneSlides({\n        slides,\n        position: 'before',\n        toShow: before,\n      })\n\n      const slidesAfter = createCloneSlides({\n        slides,\n        position: 'after',\n        toShow: after,\n      })\n\n      const output = [...slidesBefore, ...outputSlides, ...slidesAfter]\n\n      if (!config.enabled || !output.length) {\n        return h(\n          'section',\n          {\n            ref: root,\n            class: ['carousel', 'is-disabled'],\n          },\n          output\n        )\n      }\n\n      const addonsElements = slots.addons?.(data) || []\n\n      const trackEl = h(\n        'ol',\n        {\n          class: 'carousel__track',\n          onMousedownCapture: config.mouseDrag ? handleDragStart : null,\n          onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null,\n          onWheel: config.mouseWheel ? handleScroll : null,\n          style: { transform: trackTransform.value },\n        },\n        output\n      )\n      const viewPortEl = h('div', { class: 'carousel__viewport', ref: viewport }, trackEl)\n\n      return h(\n        'section',\n        {\n          ref: root,\n          class: [\n            'carousel',\n            `is-${normalizedDir.value}`,\n            `is-effect-${config.slideEffect}`,\n            {\n              'is-dragging': isDragging.value,\n              'is-hover': isHover.value,\n              'is-sliding': isSliding.value,\n              'is-vertical': isVertical.value,\n            },\n          ],\n          dir: normalizedDir.value,\n          style: carouselStyle.value,\n          'aria-label': config.i18n['ariaGallery'],\n          tabindex: '0',\n          onBlur: handleBlur,\n          onFocus: handleFocus,\n          onMouseenter: handleMouseEnter,\n          onMouseleave: handleMouseLeave,\n        },\n        [viewPortEl, addonsElements, h(ARIAComponent)]\n      )\n    }\n  },\n})\n","export enum IconName {\n  arrowDown = 'arrowDown',\n  arrowLeft = 'arrowLeft',\n  arrowRight = 'arrowRight',\n  arrowUp = 'arrowUp',\n}\n\nexport type IconNameValue = `${IconName}`\n\nexport type IconProps = {\n  name: IconNameValue\n  title?: string\n}\n","import { defineComponent, h, inject, PropType } from 'vue'\n\nimport { DEFAULT_CONFIG, injectCarousel } from '@/shared'\n\nimport { IconName, IconNameValue, IconProps } from './Icon.types'\n\nconst iconI18n = <Name extends IconNameValue>(name: Name) =>\n  `icon${name.charAt(0).toUpperCase() + name.slice(1)}` as `icon${Capitalize<Name>}`\n\nexport const icons = {\n  arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\n  arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\n  arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\n  arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\n}\n\nfunction isIconName(candidate: string): candidate is IconName {\n  return candidate in IconName\n}\n\nconst validateIconName = (value: IconNameValue) => {\n  return value && isIconName(value)\n}\n\nexport const Icon = defineComponent<IconProps>({\n  props: {\n    name: {\n      type: String as PropType<IconNameValue>,\n      required: true,\n      validator: validateIconName,\n    },\n    title: {\n      type: String,\n      default: (props: { name: IconNameValue }) =>\n        props.name ? DEFAULT_CONFIG.i18n[iconI18n(props.name)] : '',\n    },\n  },\n  setup(props) {\n    const carousel = inject(injectCarousel, null)\n\n    return () => {\n      const iconName = props.name\n      if (!iconName || !validateIconName(iconName)) return\n\n      const path = icons[iconName]\n      const pathEl = h('path', { d: path })\n\n      const iconTitle: string = carousel?.config.i18n[iconI18n(iconName)] || props.title!\n\n      const titleEl = h('title', iconTitle)\n\n      return h(\n        'svg',\n        {\n          class: 'carousel__icon',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-label': iconTitle,\n        },\n        [titleEl, pathEl]\n      )\n    }\n  },\n})\n","import {\n  ComputedRef,\n  computed,\n  defineComponent,\n  DeepReadonly,\n  getCurrentInstance,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  provide,\n  ref,\n  SetupContext,\n  useId,\n} from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { disableChildrenTabbing } from '@/utils'\n\nimport { SlideProps } from './Slide.types'\n\nexport const Slide = defineComponent({\n  name: 'CarouselSlide',\n  props: {\n    id: {\n      type: String,\n      default: (props: { isClone?: boolean }) => (props.isClone ? undefined : useId()),\n    },\n    index: {\n      type: Number,\n      default: undefined,\n    },\n    isClone: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props: DeepReadonly<SlideProps>, { attrs, slots, expose }: SetupContext) {\n    const carousel = inject(injectCarousel)\n    provide(injectCarousel, undefined) // Don't provide for nested slides\n\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n\n    const currentIndex = ref(props.index)\n\n    const setIndex = (newIndex: number) => {\n      currentIndex.value = newIndex\n    }\n\n    const instance = getCurrentInstance()!\n\n    const getBoundingRect = () => {\n      const el = instance.vnode.el as HTMLElement\n      return el ? el.getBoundingClientRect() : { width: 0, height: 0 }\n    }\n\n    expose({\n      id: props.id,\n      setIndex,\n      getBoundingRect,\n    })\n\n    const isActive: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide\n    )\n    const isPrev: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide - 1\n    )\n    const isNext: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide + 1\n    )\n    const isVisible: ComputedRef<boolean> = computed(\n      () =>\n        currentIndex.value >= carousel.visibleRange.min &&\n        currentIndex.value <= carousel.visibleRange.max\n    )\n\n    const slideStyle = computed(() => {\n      if (carousel.config.itemsToShow === 'auto') {\n        return\n      }\n      const itemsToShow = carousel.config.itemsToShow\n      const dimension =\n        carousel.config.gap > 0 && itemsToShow > 1\n          ? `calc(${100 / itemsToShow}% - ${\n              (carousel.config.gap * (itemsToShow - 1)) / itemsToShow\n            }px)`\n          : `${100 / itemsToShow}%`\n\n      return carousel.isVertical ? { height: dimension } : { width: dimension }\n    })\n\n    carousel.slideRegistry.registerSlide(instance, props.index)\n    onUnmounted(() => {\n      carousel.slideRegistry.unregisterSlide(instance)\n    })\n\n    if (props.isClone) {\n      // Prevent cloned slides from being focusable\n      onMounted(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n      onUpdated(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n    }\n\n    return () => {\n      if (!carousel.config.enabled) {\n        return slots.default?.()\n      }\n\n      return h(\n        'li',\n        {\n          style: [attrs.style, { ...slideStyle.value }],\n          class: {\n            carousel__slide: true,\n            'carousel__slide--clone': props.isClone,\n            'carousel__slide--visible': isVisible.value,\n            'carousel__slide--active': isActive.value,\n            'carousel__slide--prev': isPrev.value,\n            'carousel__slide--next': isNext.value,\n            'carousel__slide--sliding': carousel.isSliding,\n          },\n          onFocusin: () => {\n            // Prevent the viewport being scrolled by the focus\n            if (carousel.viewport) {\n              carousel.viewport.scrollLeft = 0\n            }\n            carousel.nav.slideTo(currentIndex.value)\n          },\n          id: props.isClone ? undefined : props.id,\n          'aria-hidden': props.isClone || undefined,\n        },\n        slots.default?.({\n          currentIndex: currentIndex.value,\n          isActive: isActive.value,\n          isClone: props.isClone,\n          isPrev: isPrev.value,\n          isNext: isNext.value,\n          isSliding: carousel.isSliding,\n          isVisible: isVisible.value,\n        })\n      )\n    }\n  },\n})\n","import { computed, defineComponent, h, inject, PropType } from 'vue'\n\nimport { injectCarousel, NormalizedDir } from '@/shared'\n\nimport { Icon, IconNameValue } from '../Icon'\n\nimport { NavigationProps } from './Navigation.types'\n\nexport const Navigation = defineComponent<NavigationProps>({\n  name: 'CarouselNavigation',\n  inheritAttrs: false,\n  props: {\n    carousel: {\n      type: Object as PropType<NavigationProps['carousel']>,\n    },\n  },\n  setup(props, { slots, attrs }) {\n    let carousel = inject(injectCarousel, null)!\n    const { next: slotNext, prev: slotPrev } = slots\n\n    const getPrevIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        btt: 'arrowDown',\n        ltr: 'arrowLeft',\n        rtl: 'arrowRight',\n        ttb: 'arrowUp',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n    const getNextIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        btt: 'arrowUp',\n        ltr: 'arrowRight',\n        rtl: 'arrowLeft',\n        ttb: 'arrowDown',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n\n    const prevDisabled = computed(\n      () => !carousel.config.wrapAround && carousel.currentSlide <= carousel.minSlide\n    )\n    const nextDisabled = computed(\n      () => !carousel.config.wrapAround && carousel.currentSlide >= carousel.maxSlide\n    )\n\n    return () => {\n      if (props.carousel) {\n        carousel = props.carousel;\n      }\n      if (!carousel) {\n        console.warn('[vue3-carousel]: A carousel component must be provided for the navigation component to display')\n        return '';\n      }\n      const { i18n } = carousel.config\n      const prevButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: prevDisabled.value,\n          'aria-label': i18n['ariaPreviousSlide'],\n          title: i18n['ariaPreviousSlide'],\n          onClick: carousel.nav.prev,\n          ...attrs,\n          class: [\n            'carousel__prev',\n            { 'carousel__prev--disabled': prevDisabled.value },\n            attrs.class,\n          ],\n        },\n        slotPrev?.() || h(Icon, { name: getPrevIcon() })\n      )\n      const nextButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: nextDisabled.value,\n          'aria-label': i18n['ariaNextSlide'],\n          title: i18n['ariaNextSlide'],\n          onClick: carousel.nav.next,\n          ...attrs,\n          class: [\n            'carousel__next',\n            { 'carousel__next--disabled': nextDisabled.value },\n            attrs.class,\n          ],\n        },\n        slotNext?.() || h(Icon, { name: getNextIcon() })\n      )\n\n      return [prevButton, nextButton]\n    }\n  },\n})\n","import { computed, defineComponent, h, inject, PropType, VNode } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { getSnapAlignOffset, i18nFormatter, mapNumberToRange } from '@/utils'\n\nimport { PaginationProps } from './Pagination.types'\n\nexport const Pagination = defineComponent<PaginationProps>({\n  name: 'CarouselPagination',\n  props: {\n    disableOnClick: {\n      type: Boolean,\n    },\n    paginateByItemsToShow: {\n      type: Boolean,\n    },\n    carousel: {\n      type: Object as PropType<PaginationProps['carousel']>,\n    }\n  },\n  setup(props) {\n    let carousel = inject(injectCarousel, null)!\n\n    const itemsToShow = computed(() => carousel.config.itemsToShow as number)\n    const offset = computed(() =>\n      getSnapAlignOffset({\n        align: carousel.config.snapAlign,\n        itemsToShow: itemsToShow.value,\n      })\n    )\n    const isPaginated = computed(\n      () => props.paginateByItemsToShow && itemsToShow.value > 1\n    )\n    const currentPage = computed(() =>\n      Math.ceil((carousel.activeSlide - offset.value) / itemsToShow.value)\n    )\n    const pageCount = computed(() => Math.ceil(carousel.slidesCount / itemsToShow.value))\n\n    const isActive = (slide: number): boolean =>\n      mapNumberToRange(\n        isPaginated.value\n          ? {\n              val: currentPage.value,\n              max: pageCount.value - 1,\n              min: 0,\n            }\n          : {\n              val: carousel.activeSlide,\n              max: carousel.maxSlide,\n              min: carousel.minSlide,\n            }\n      ) === slide\n\n    return () => {\n      if (props.carousel) {\n        carousel = props.carousel;\n      }\n      if (!carousel) {\n        console.warn('[vue3-carousel]: A carousel component must be provided for the pagination component to display')\n        return '';\n      }\n      const children: Array<VNode> = []\n\n      for (\n        let slide = isPaginated.value ? 0 : carousel.minSlide;\n        slide <= (isPaginated.value ? pageCount.value - 1 : carousel.maxSlide);\n        slide++\n      ) {\n        const buttonLabel = i18nFormatter(\n          carousel.config.i18n[\n            isPaginated.value ? 'ariaNavigateToPage' : 'ariaNavigateToSlide'\n          ],\n          {\n            slideNumber: slide + 1,\n          }\n        )\n        const active = isActive(slide)\n        const button = h('button', {\n          type: 'button',\n          class: {\n            'carousel__pagination-button': true,\n            'carousel__pagination-button--active': active,\n          },\n          'aria-label': buttonLabel,\n          'aria-pressed': active,\n          'aria-controls': carousel.slides[slide]?.exposed?.id,\n          title: buttonLabel,\n          disabled: props.disableOnClick,\n          onClick: () =>\n            carousel.nav.slideTo(\n              isPaginated.value\n                ? Math.floor(slide * +carousel.config.itemsToShow + offset.value)\n                : slide\n            ),\n        })\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button)\n        children.push(item)\n      }\n\n      return h('ol', { class: 'carousel__pagination' }, children)\n    }\n  },\n})\n","<script setup>\r\n  import 'vue3-carousel/carousel.css'\r\n  import { ref, computed } from 'vue'\r\n  import { Carousel, Slide } from 'vue3-carousel'\r\n\r\n  const carouselRef = ref()\r\n  const currentSlide = ref(1)\r\n\r\n  const next = () => carouselRef.value.next()\r\n  const prev = () => carouselRef.value.prev()\r\n\r\n  const images = [\r\n    {id: 0, img: require(\"@/assets/features/carousel_1.png\"), text: \"\"},\r\n    {id: 1, img: require(\"@/assets/features/carousel_2.png\"), text: \"\"},\r\n    {id: 2, img: require(\"@/assets/features/carousel_3.png\"), text: \"\"},\r\n    {id: 3, img: require(\"@/assets/features/carousel_4.png\"), text: \"\"}\r\n  ]\r\n\r\n  const isMobile = computed(() => window.innerWidth <= 768)\r\n\r\n  const config = computed(() => ({\r\n    itemsToShow: isMobile.value ? 1 : 2,\r\n    snapAlign: 'center',\r\n    wrapAround: true,\r\n    transition: 500,\r\n    breakpoints: {\r\n      768: {\r\n        itemsToShow: 1,\r\n        snapAlign: 'center'\r\n      }\r\n    }\r\n  }))\r\n</script>\r\n\r\n<template>\r\n  <section class=\"large\" id=\"feature-section-1\">\r\n    <b id=\"test\">\r\n      ifgi Geocam\r\n    </b>\r\n    <div class=\"mouse\"></div>\r\n  </section>\r\n  \r\n  <section class=\"large\" id=\"feature-section-2\">\r\n    <b id=\"carousel-headline\">\r\n      See the features\r\n    </b>\r\n    \r\n    <Carousel \r\n      ref=\"carouselRef\" \r\n      v-model=\"currentSlide\" \r\n      v-bind=\"config\" \r\n      id=\"feature-carousel\"\r\n    >\r\n      <Slide v-for=\"image in images\" :key=\"image.id\">\r\n        <div class=\"slide-container\">\r\n          <img :src=\"image.img\" :alt=\"'Feature ' + image.id\" class=\"carousel-img\" />\r\n          <p class=\"slide-text\" v-if=\"image.text\">{{ image.text }}</p>\r\n        </div>\r\n      </Slide>\r\n    </Carousel>\r\n\r\n    <div id=\"carousel-nav\">\r\n      <button class=\"carousel-btn\" aria-label=\"carousel-prev\" @click=\"prev\">\r\n        <i class=\"bi bi-arrow-left-circle\"></i>\r\n      </button>\r\n      <button class=\"carousel-btn\" aria-label=\"carousel-next\" @click=\"next\">\r\n        <i class=\"bi bi-arrow-right-circle\"></i>\r\n      </button>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n  section {\r\n    width: 100%;\r\n    display: grid;\r\n    align-items: center;\r\n    justify-items: center;\r\n  }\r\n\r\n  #feature-section-1 {\r\n    background-image: url(\"@/assets/bg_v1.jpg\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr 1fr;\r\n  }\r\n\r\n  .small {\r\n    height: 70vh;\r\n  }\r\n\r\n  .large {\r\n    height: 100vh;\r\n    min-height: 600px;\r\n  }\r\n\r\n  #test {\r\n    grid-column: 1/4;\r\n    grid-row: 2;\r\n    font-size: clamp(40pt, 8vw, 100pt);\r\n    text-align: center;\r\n    padding: 0 20px;\r\n  }\r\n\r\n  /* Animation for scroll info */\r\n  .mouse {\r\n    grid-column: 2;\r\n    grid-row: 3;\r\n    width: 50px;\r\n    height: 90px;\r\n    border: 3px solid #333;\r\n    border-radius: 60px;\r\n    position: relative;\r\n  }\r\n\r\n  .mouse::before {\r\n    content: '';\r\n    width: 12px;\r\n    height: 12px;\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background-color: #333;\r\n    border-radius: 50%;\r\n    opacity: 1;\r\n    animation: wheel 2s infinite;\r\n  }\r\n\r\n  @keyframes wheel {\r\n    to {\r\n      opacity: 0;\r\n      top: 60px;\r\n    }\r\n  }\r\n\r\n  /* Carousel section Style */\r\n  #feature-section-2 {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto 1fr auto;\r\n    background: linear-gradient(320deg, var(--black-grad) 0%, var(--blue-grad) 100%);\r\n    padding: 20px 0;\r\n  }\r\n\r\n  .slide-container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 10px;\r\n  }\r\n\r\n  .carousel-img {\r\n    border-radius: 15px;\r\n    width: auto;\r\n    max-width: 100%;\r\n    height: auto;\r\n    max-height: 60vh;\r\n    object-fit: contain;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  #carousel-headline {\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n    font-size: clamp(20pt, 5vw, 30pt);\r\n    margin: 1.5rem 0;\r\n    color: var(--white-soft);\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  #carousel-nav {\r\n    grid-column: 1;\r\n    grid-row: 3;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  #feature-carousel {\r\n    grid-column: 1;\r\n    grid-row: 2;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0 20px;\r\n  }\r\n\r\n  .slide-text {\r\n    position: absolute;\r\n    bottom: 20px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-size: clamp(16pt, 4vw, 24pt);\r\n    color: var(--white-soft);\r\n    text-align: center;\r\n    width: 90%;\r\n    max-width: 500px;\r\n    background-color: rgba(0,0,0,0.5);\r\n    padding: 10px;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  .carousel-btn {\r\n    background: transparent;\r\n    border: none;\r\n    font-size: clamp(20pt, 5vw, 30pt);\r\n    margin: 0 1rem;\r\n    color: var(--light-green);\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media (min-width: 769px) {\r\n    #feature-section-2 {\r\n      grid-template-columns: 1fr 3fr 1fr;\r\n      grid-template-rows: auto 1fr auto;\r\n    }\r\n\r\n    #carousel-headline {\r\n      grid-column: 1/4;\r\n    }\r\n\r\n    #feature-carousel {\r\n      grid-column: 2;\r\n    }\r\n\r\n    #carousel-nav {\r\n      grid-column: 1/4;\r\n    }\r\n\r\n    .carousel-img {\r\n      max-height: 65vh;\r\n    }\r\n  }\r\n</style>","import script from \"./ProductView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ProductView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ProductView.vue?vue&type=style&index=0&id=7c626290&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7c626290\"]])\n\nexport default __exports__"],"names":["BREAKPOINT_MODE_OPTIONS","DIR_MAP","DIR_OPTIONS","I18N_DEFAULT_CONFIG","ariaGallery","ariaNavigateToPage","ariaNavigateToSlide","ariaNextSlide","ariaPreviousSlide","iconArrowDown","iconArrowLeft","iconArrowRight","iconArrowUp","itemXofY","SLIDE_EFFECTS","Object","values","SNAP_ALIGN_OPTIONS","DEFAULT_MOUSE_WHEEL_THRESHOLD","DEFAULT_DRAG_THRESHOLD","DEFAULT_CONFIG","autoplay","breakpointMode","breakpoints","undefined","dir","enabled","gap","height","i18n","ignoreAnimations","itemsToScroll","itemsToShow","modelValue","mouseDrag","mouseWheel","pauseAutoplayOnHover","preventExcessiveDragging","slideEffect","snapAlign","touchDrag","transition","wrapAround","injectCarousel","Symbol","createSlideRegistry","emit","slides","shallowReactive","updateSlideIndexes","startIndex","slice","forEach","slide","offset","_a","exposed","setIndex","index","cleanup","splice","length","getSlides","registerSlide","props","isClone","slideIndex","unregisterSlide","indexOf","calculateAverage","numbers","sum","reduce","acc","num","createCloneSlides","position","toShow","clones","isBefore","start","end","i","id","key","vnode","clone","cloneVNode","el","push","FOCUSABLE_ELEMENTS_SELECTOR","disableChildrenTabbing","node","Element","elements","querySelectorAll","HTMLElement","hasAttribute","getAttribute","setAttribute","except","obj","keys","filter","k","includes","getDraggedSlidesCount","params","isVertical","isReversed","dragged","effectiveSlideSize","threshold","dragValue","y","x","dragRatio","absRatio","Math","abs","slidesDragged","sign","round","getNumberInRange","val","max","min","isNaN","getTransformValues","transform","window","getComputedStyle","split","map","v","parseFloat","getScaleMultipliers","transformElements","widthMultiplier","heightMultiplier","transformArr","getSnapAlignOffsetByItemsToShow","align","getSnapAlignOffsetBySlideAndViewport","slideSize","viewportSize","getSnapAlignOffset","i18nFormatter","string","entries","value","replace","String","mapNumberToRange","mod","throttle","fn","ms","isThrottled","frameId","throttled","args","step","requestAnimationFrame","time","elapsed","cancel","cancelAnimationFrame","toCssValue","unit","toString","ARIA","defineComponent","name","setup","carousel","inject","h","class","config","currentSlide","slidesCount","useDrag","options","isTouch","startPosition","reactive","isDragging","ref","isSliding","sliding","computed","handleDragStart","event","targetTagName","target","tagName","type","touches","preventDefault","button","clientX","clientY","moveEvent","endEvent","document","addEventListener","handleDrag","passive","handleDragEnd","onDragStart","call","currentX","currentY","onDrag","deltaX","deltaY","draggedDistance","e","stopPropagation","once","capture","onDragEnd","removeEventListener","useHover","isHover","handleMouseEnter","handleMouseLeave","useWheel","vertical","handleScroll","primaryDelta","effectiveDelta","isScrollingForward","_b","onWheel","carouselProps","default","Number","validator","clamp","Boolean","normalizedDir","console","warn","Array","mouseScrollThreshold","Carousel","emits","slots","expose","slideRegistry","root","viewport","fallbackConfig","assign","currentSlideIndex","activeSlideIndex","watch","prevSlideIndex","middleSlideIndex","ceil","maxSlideIndex","minSlideIndex","autoplayTimer","transitionTimer","resizeObserver","isAuto","dimension","updateBreakpointsConfig","mounted","widthSource","getBoundingClientRect","width","innerWidth","breakpointsArray","sort","a","b","newConfig","some","breakpoint","Infinity","handleResize","updateSlidesData","updateSlideSize","Set","slidesRect","updateSlidesRectSize","rect","getBoundingRect","viewportRect","updateViewportRectSize","scaleMultipliers","totalGap","isArray","animationInterval","watchEffect","setAnimationInterval","contains","animationName","add","stepAnimation","finishAnimation","delete","size","onMounted","initAutoplay","ResizeObserver","observe","onBeforeUnmount","clearTimeout","clearInterval","disconnect","handleBlur","handleArrowKeys","ctrlKey","endsWith","next","prev","handleFocus","setInterval","resetAutoplay","stopAutoplay","_d","_c","draggedSlides","slideTo","skipTransition","targetIndex","slidingToIndex","modelWatcher","pause","transitionCallback","resume","setTimeout","restartCarousel","deep","clonedSlidesCount","before","after","slidesToClone","clonedSlidesOffset","snapAlignOffset","scrolledOffset","output","maxSlidingValue","scrolledSlides","visibleRange","base","floor","minIndex","accumulatedSize","normalizedIndex","maxIndex","trackTransform","translateAxis","dragOffset","totalOffset","carouselStyle","nav","provided","activeSlide","maxSlide","minSlide","provide","data","middleSlide","toRefs","slotSlides","outputSlides","slidesBefore","slidesAfter","addonsElements","addons","trackEl","onMousedownCapture","onTouchstartPassiveCapture","style","viewPortEl","tabindex","onBlur","onFocus","onMouseenter","onMouseleave","IconName","iconI18n","charAt","toUpperCase","icons","arrowDown","arrowLeft","arrowRight","arrowUp","isIconName","candidate","validateIconName","Icon","required","title","iconName","path","pathEl","d","iconTitle","titleEl","viewBox","role","Slide","inheritAttrs","attrs","slotNext","slotPrev","getPrevIcon","directionIcons","btt","ltr","rtl","ttb","getNextIcon","prevDisabled","nextDisabled","prevButton","disabled","onClick","nextButton","disableOnClick","paginateByItemsToShow","isPaginated","currentPage","pageCount","isActive","children","buttonLabel","slideNumber","active","item","useId","currentIndex","newIndex","instance","getCurrentInstance","isPrev","isNext","isVisible","slideStyle","onUnmounted","onUpdated","carousel__slide","onFocusin","scrollLeft","carouselRef","images","img","require","text","isMobile","_createElementVNode","_hoisted_1","_createVNode","_unref","_mergeProps","$event","_createElementBlock","_Fragment","_renderList","image","_hoisted_2","src","alt","_hoisted_4","_toDisplayString","__exports__"],"sourceRoot":""}